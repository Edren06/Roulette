// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Roulette.DataContext;

#nullable disable

namespace Roulette.Migrations
{
    [DbContext(typeof(SqlLiteContext))]
    [Migration("20230302202916_ModelCreation")]
    partial class ModelCreation
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "7.0.3");

            modelBuilder.Entity("Roulette.DatabaseModels.Bet", b =>
                {
                    b.Property<int>("BetId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(10, 2)");

                    b.Property<DateTime>("BetDate")
                        .HasColumnType("datetime");

                    b.Property<decimal>("Payout")
                        .HasColumnType("decimal(10, 2)");

                    b.Property<int?>("SpinId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("TableItemId")
                        .HasColumnType("INTEGER");

                    b.HasKey("BetId");

                    b.HasIndex("SpinId");

                    b.HasIndex("TableItemId");

                    b.ToTable("Bet");
                });

            modelBuilder.Entity("Roulette.DatabaseModels.NumberAttribute", b =>
                {
                    b.Property<int>("NumberAttributeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.Property<decimal>("PayoutValue")
                        .HasColumnType("decimal(10, 2)");

                    b.HasKey("NumberAttributeId");

                    b.ToTable("NumberAttribute");
                });

            modelBuilder.Entity("Roulette.DatabaseModels.Spin", b =>
                {
                    b.Property<int>("SpinId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("SpinDate")
                        .HasColumnType("datetime");

                    b.Property<int>("TableItemId")
                        .HasColumnType("INTEGER");

                    b.HasKey("SpinId");

                    b.HasIndex("TableItemId");

                    b.ToTable("Spin");
                });

            modelBuilder.Entity("Roulette.DatabaseModels.TableItem", b =>
                {
                    b.Property<int>("TableItemId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<bool>("IsLandable")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.Property<int>("NumberAttributeId")
                        .HasColumnType("INTEGER");

                    b.HasKey("TableItemId");

                    b.HasIndex("NumberAttributeId");

                    b.ToTable("TableItem");
                });

            modelBuilder.Entity("Roulette.DatabaseModels.TableItemAttribute", b =>
                {
                    b.Property<int>("TableItemAttributeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("NumberAttributeId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("TableItemId")
                        .HasColumnType("INTEGER");

                    b.HasKey("TableItemAttributeId");

                    b.HasIndex("NumberAttributeId");

                    b.HasIndex("TableItemId");

                    b.ToTable("TableItemAttribute");
                });

            modelBuilder.Entity("Roulette.DatabaseModels.Bet", b =>
                {
                    b.HasOne("Roulette.DatabaseModels.Spin", "Spin")
                        .WithMany()
                        .HasForeignKey("SpinId");

                    b.HasOne("Roulette.DatabaseModels.TableItem", "TableItem")
                        .WithMany()
                        .HasForeignKey("TableItemId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Spin");

                    b.Navigation("TableItem");
                });

            modelBuilder.Entity("Roulette.DatabaseModels.Spin", b =>
                {
                    b.HasOne("Roulette.DatabaseModels.TableItem", "TableItem")
                        .WithMany()
                        .HasForeignKey("TableItemId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("TableItem");
                });

            modelBuilder.Entity("Roulette.DatabaseModels.TableItem", b =>
                {
                    b.HasOne("Roulette.DatabaseModels.NumberAttribute", "NumberAttribute")
                        .WithMany()
                        .HasForeignKey("NumberAttributeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("NumberAttribute");
                });

            modelBuilder.Entity("Roulette.DatabaseModels.TableItemAttribute", b =>
                {
                    b.HasOne("Roulette.DatabaseModels.NumberAttribute", "NumberAttribute")
                        .WithMany()
                        .HasForeignKey("NumberAttributeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Roulette.DatabaseModels.TableItem", "Bet")
                        .WithMany()
                        .HasForeignKey("TableItemId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Bet");

                    b.Navigation("NumberAttribute");
                });
#pragma warning restore 612, 618
        }
    }
}
